{
	"info": {
		"_postman_id": "bb359d8f-e6b0-458b-9636-326de0533b61",
		"name": "Postman_gr24",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "home1",
			"item": [
				{
					"name": "1",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "162.55.220.72:5005/get_method?name=Lena&age=32",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"get_method"
							],
							"query": [
								{
									"key": "name",
									"value": "Lena"
								},
								{
									"key": "age",
									"value": "32"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "2",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Lena",
									"type": "text"
								},
								{
									"key": "age",
									"value": "32",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "350",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "162.55.220.72:5005/user_info_3",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"user_info_3"
							]
						}
					},
					"response": []
				},
				{
					"name": "3",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "162.55.220.72:5005/object_info_1?name=Lena&age=32&weight=60",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"object_info_1"
							],
							"query": [
								{
									"key": "name",
									"value": "Lena"
								},
								{
									"key": "age",
									"value": "32"
								},
								{
									"key": "weight",
									"value": "60"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "4",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "162.55.220.72:5005/object_info_2?name=Lena&age=32&salary=350",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"object_info_2"
							],
							"query": [
								{
									"key": "name",
									"value": "Lena"
								},
								{
									"key": "age",
									"value": "32"
								},
								{
									"key": "salary",
									"value": "350"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "5",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "162.55.220.72:5005/object_info_3?name=Lena&age=32&salary=350",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"object_info_3"
							],
							"query": [
								{
									"key": "name",
									"value": "Lena"
								},
								{
									"key": "age",
									"value": "32"
								},
								{
									"key": "salary",
									"value": "350"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "6",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "162.55.220.72:5005/object_info_4?name=Lena&age=32&salary=350",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"object_info_4"
							],
							"query": [
								{
									"key": "name",
									"value": "Lena"
								},
								{
									"key": "age",
									"value": "32"
								},
								{
									"key": "salary",
									"value": "350"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "7",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Lena",
									"type": "text"
								},
								{
									"key": "age",
									"value": "32",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "350",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "162.55.220.72:5005/user_info_2",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"user_info_2"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "home2",
			"item": [
				{
					"name": "login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var log=pm.response.json();\r",
									"pm.environment.set(\"token\",log.token);\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "login",
									"value": "lena",
									"type": "text"
								},
								{
									"key": "password",
									"value": "123",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "162.55.220.72:5005/login",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "user_info_3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var resp = pm.response.json();\r",
									"\r",
									"pm.test(\"your test name\", function () {\r",
									"    pm.expect(resp.name).to.eql(\"Lena\");\r",
									"});\r",
									"pm.test(\"your test age\", function () {\r",
									"    pm.expect(+resp.age).to.eql(32);\r",
									"});\r",
									"pm.test(\"your test salary\", function () {\r",
									"    pm.expect(resp.salary).to.eql(350);\r",
									"});\r",
									"\r",
									"var req = request.data;\r",
									"var req_name = request.data.name;\r",
									"var req_age = request.data.age;\r",
									"var req_salary = request.data.salary;\r",
									"\r",
									"pm.test(\"your test name 2\", function () {\r",
									"    pm.expect(resp.name).to.eql(req_name);\r",
									"});\r",
									"pm.test(\"your test age2\", function () {\r",
									"    pm.expect(resp.age).to.eql(req_age);\r",
									"});\r",
									"pm.test(\"your test salary2\", function (){\r",
									"    pm.expect(resp.salary).to.eql(+req_salary);\r",
									"});\r",
									"console.log(resp.family);\r",
									"\r",
									"pm.test(\"u_salary_1_5_year\", function (){\r",
									"    pm.expect(resp.family.u_salary_1_5_year).to.eql(+req_salary*4);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Lena",
									"type": "text"
								},
								{
									"key": "age",
									"value": "32",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "350",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "162.55.220.72:5005/user_info_3",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"user_info_3"
							],
							"query": [
								{
									"key": "name",
									"value": "Lena",
									"disabled": true
								},
								{
									"key": "age",
									"value": "32",
									"disabled": true
								},
								{
									"key": "salary",
									"value": "350",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "object_info_3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var resp = pm.response.json();\r",
									"var req = pm.request.url.query.toObject ();\r",
									"\r",
									"pm.test(\"your test name\", function () {\r",
									"    pm.expect(resp.name).to.eql(req.name);\r",
									"});\r",
									"pm.test(\"your test name\", function () {\r",
									"    pm.expect(resp.age).to.eql(req.age);\r",
									"});\r",
									"pm.test(\"your test name\", function () {\r",
									"    pm.expect(resp.salary).to.eql(+req.salary);\r",
									"});\r",
									"console.log(resp.family);\r",
									"\r",
									"pm.test(\"dog have name\", function () {\r",
									"    pm.expect(resp.family.pets.dog).to.have.property(\"name\");\r",
									"});\r",
									"pm.test(\"dog have age\", function () {\r",
									"     pm.expect(resp.family.pets.dog).to.have.property(\"age\");\r",
									"});\r",
									"pm.test(\"name have Luky\", function () {\r",
									"     pm.expect(resp.family.pets.dog.name).to.eql(\"Luky\");\r",
									"});\r",
									"\r",
									"pm.test(\"name have Luky\", function () {\r",
									"     pm.expect(resp.family.pets.dog.age).to.eql(4);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/object_info_3?name=Lena&age=32&salary=350",
							"host": [
								"{{url}}"
							],
							"path": [
								"object_info_3"
							],
							"query": [
								{
									"key": "name",
									"value": "Lena"
								},
								{
									"key": "age",
									"value": "32"
								},
								{
									"key": "salary",
									"value": "350"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "object_info_4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var resp = pm.response.json ();\r",
									"var req = pm.request.url.query.toObject ();\r",
									"\r",
									"pm.test(\"name_name\", function (){\r",
									"    pm.expect(resp.name).to.eql(req.name);\r",
									"});\r",
									"pm.test(\"age_age\", function (){\r",
									"    pm.expect(resp.age).to.eql(+req.age);\r",
									"});\r",
									"\r",
									"console.log(+req.salary);\r",
									"console.log(resp.salary);\r",
									"console.log(resp.salary[0]);\r",
									"console.log(+resp.salary[1]);\r",
									"console.log(+resp.salary[2]);\r",
									"\r",
									"pm.test(\"salary\", function (){\r",
									"    pm.expect(resp.salary[0]).to.eql(+req.salary);\r",
									"});\r",
									"pm.test(\"salary*2\", function (){\r",
									"    pm.expect(+resp.salary[1]).to.eql((+req.salary)*2);\r",
									"});\r",
									"pm.test(\"salary*3\", function (){\r",
									"    pm.expect(+resp.salary[2]).to.eql((+req.salary)*3);\r",
									"});\r",
									"\r",
									"var respData = pm.response.json ();\r",
									"\r",
									"pm.environment.set(\"name\", respData.name);\r",
									"pm.environment.set(\"age\", respData.age);\r",
									"pm.environment.set(\"salary\", respData.salary[0]);\r",
									"\r",
									"\r",
									"var arr = resp.salary;\r",
									"for (var i = 0; i <= 2; i++) {\r",
									"\tconsole.log(arr[i]);\r",
									"};\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/object_info_4?name=Lena&age=32&salary=350",
							"host": [
								"{{url}}"
							],
							"path": [
								"object_info_4"
							],
							"query": [
								{
									"key": "name",
									"value": "Lena"
								},
								{
									"key": "age",
									"value": "32"
								},
								{
									"key": "salary",
									"value": "350"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "user_info_2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var resp = pm.response.json ();\r",
									"var req = request.data;\r",
									"\r",
									"pm.test(\"start_qa_salary\",() => {\r",
									"pm.response.to.have.jsonBody('start_qa_salary');\r",
									"});\r",
									"pm.test(\"qa_salary_after_6_months\",() => {\r",
									"pm.response.to.have.jsonBody('qa_salary_after_6_months');\r",
									"});\r",
									"pm.test(\"qa_salary_after_12_months\",() => {\r",
									"pm.response.to.have.jsonBody('qa_salary_after_12_months');\r",
									"});\r",
									"pm.test(\"qa_salary_after_1.5_year\",() => {\r",
									"pm.response.to.have.jsonBody('qa_salary_after_1.5_year');\r",
									"});\r",
									"pm.test(\"qa_salary_after_3.5_years\",() => {\r",
									"pm.response.to.have.jsonBody('qa_salary_after_3.5_years');\r",
									"});\r",
									"\r",
									"pm.test(\"person\",() => {\r",
									"pm.response.to.have.jsonBody('person');\r",
									"});\r",
									"\r",
									"pm.test(\"start_qa_salary \", function (){\r",
									"    pm.expect(resp.start_qa_salary).to.eql(+req.salary);\r",
									"});\r",
									"pm.test(\"qa_salary_after_6_months  \", function (){\r",
									"    pm.expect(resp.qa_salary_after_6_months).to.eql(+req.salary*2);\r",
									"});\r",
									"pm.test(\"qa_salary_after_12_months \", function (){\r",
									"    pm.expect(resp.qa_salary_after_12_months).to.eql(+req.salary*2.7);\r",
									"});\r",
									"pm.test(\"qa_salary_after_1.5_year \", function (){\r",
									"    pm.expect(resp[\"qa_salary_after_1.5_year\"]).to.eql(+req.salary*3.3);\r",
									"});\r",
									"\r",
									"pm.test(\"qa_salary_after_3.5_year\", function (){\r",
									"    pm.expect(resp[\"qa_salary_after_3.5_years\"]).to.eql(+req.salary*3.8);\r",
									"});\r",
									"\r",
									"pm.test(\"u_age\", function (){\r",
									"    pm.expect(resp.person.u_name[1]).to.eql(+req.salary);\r",
									"});\r",
									"\r",
									"pm.test(\"u_age\", function (){\r",
									"    pm.expect(resp.person.u_age).to.eql(+req.age);\r",
									"});\r",
									"\r",
									"pm.test(\"u_salary_5_years\", function (){\r",
									"    pm.expect(resp.person.u_salary_5_years).to.eql(+req.salary*4.2);\r",
									"});\r",
									"\r",
									"var obj = resp.person;\r",
									"for (key in obj) {\r",
									"\tconsole.log(key);\r",
									"};\r",
									"\r",
									"for (var prop in obj) {\r",
									"  console.log(prop + \": \" + obj[prop]);\r",
									"}\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "{{name}}",
									"type": "text"
								},
								{
									"key": "age",
									"value": "{{age}}",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "{{salary}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/user_info_2",
							"host": [
								"{{url}}"
							],
							"path": [
								"user_info_2"
							],
							"query": [
								{
									"key": "name",
									"value": "Lena",
									"disabled": true
								},
								{
									"key": "age",
									"value": "32",
									"disabled": true
								},
								{
									"key": "salary",
									"value": "350",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "first",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"This is the first responce from server!\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/first",
							"host": [
								"{{url}}"
							],
							"path": [
								"first"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "home3",
			"item": [
				{
					"name": "login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var log=pm.response.json();\r",
									"pm.environment.set(\"token\",log.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{url}}/login?login=qqq&password=123",
							"host": [
								"{{url}}"
							],
							"path": [
								"login"
							],
							"query": [
								{
									"key": "login",
									"value": "qqq"
								},
								{
									"key": "password",
									"value": "123"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "user_info",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var resp = pm.response.json(); \r",
									"var req = JSON.parse(request.data);\r",
									"\r",
									"// // проверка структуры json //\r",
									"\r",
									" var schema = {\r",
									"   \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"person\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"u_age\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"u_name\": {\r",
									"          \"type\": \"array\",\r",
									"          \"items\": [\r",
									"            {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            {\r",
									"              \"type\": \"integer\"\r",
									"            }\r",
									"          ]\r",
									"        },\r",
									"        \"u_salary_1_5_year\": {\r",
									"          \"type\": \"integer\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"u_age\",\r",
									"        \"u_name\",\r",
									"        \"u_salary_1_5_year\"\r",
									"      ]\r",
									"    },\r",
									"    \"qa_salary_after_12_months\": {\r",
									"      \"type\": \"number\"\r",
									"    },\r",
									"    \"qa_salary_after_6_months\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"start_qa_salary\": {\r",
									"      \"type\": \"integer\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"person\",\r",
									"    \"qa_salary_after_12_months\",\r",
									"    \"qa_salary_after_6_months\",\r",
									"    \"start_qa_salary\"\r",
									"  ]\r",
									"\r",
									" };\r",
									"   \r",
									"pm.test(\"Verify if the schema is valid\", function() {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"qa_salary_after_6_months: salary * 2\", function (){\r",
									" pm.expect(resp.qa_salary_after_6_months).to.eql((req.salary)*2);\r",
									"});\r",
									"\r",
									"pm.test(\"qa_salary_after_12_months: salary * 2.9\", function (){\r",
									" pm.expect(resp.qa_salary_after_12_months).to.eql((req.salary)*2.9);\r",
									"});\r",
									"\r",
									"pm.environment.set(\"u_salary_1.5_year\", resp.person.u_salary_1_5_year);\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"age\" : 32,\r\n    \"salary\" : 350,\r\n    \"name\": \"Lena\",\r\n    \"auth_token\" : \"{{token}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/user_info",
							"host": [
								"{{url}}"
							],
							"path": [
								"user_info"
							]
						}
					},
					"response": []
				},
				{
					"name": "new_data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var resp = pm.response.json();\r",
									"var req = request.data;\r",
									"\r",
									"// проверка структуры json //\r",
									"var schema = {\r",
									"    \"type\": \"object\",\r",
									"    \"properties\": {\r",
									"        \"age\": { \"type\": \"integer\" },\r",
									"        \"name\": { \"type\": \"string\" },\r",
									"        \"salary\": {\r",
									"            \"type\": \"array\",\r",
									"            \"items\": [\r",
									"                { \"type\": \"integer\" },\r",
									"                { \"type\": \"string\" },\r",
									"                { \"type\": \"string\" },\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"required\": [\"age\", \"name\", \"salary\"],\r",
									"};\r",
									"\r",
									"pm.test(\"Verify if the schema is valid\", function() {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"salary * 2\", function () {\r",
									"    pm.expect(+resp.salary[1]).to.eql((req.salary) * 2);\r",
									"});\r",
									"pm.test(\"salary * 3\", function () {\r",
									"    pm.expect(+resp.salary[2]).to.eql((req.salary) * 3);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"salary2>salary0,salary1\", function () {\r",
									"    pm.expect(+resp.salary[2]).to.be.above(+resp.salary[0]);\r",
									"    pm.expect(+resp.salary[2]).to.be.above(+resp.salary[1])\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "age",
									"value": "{{age}}",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "350",
									"type": "text"
								},
								{
									"key": "name",
									"value": "гг",
									"type": "text"
								},
								{
									"key": "auth_token",
									"value": "{{token}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/new_data",
							"host": [
								"{{url}}"
							],
							"path": [
								"new_data"
							],
							"query": [
								{
									"key": "",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "test_pet_info",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var resp = pm.response.json();\r",
									"var req = request.data;\r",
									"\r",
									"var schema = {\r",
									"     \"type\" : \"object\",\r",
									"     \"properties\" : {\r",
									"            \"daily_food\" : { \"type\" : \"number\" },\r",
									"            \"daily_sleep\" : { \"type\" : \"integer\" },\r",
									"            \"age\" : { \"type\" : \"integer\" },\r",
									"            \"name\" : { \"type\" : \"string\" },\r",
									"     },\r",
									"     \"required\":[\"age\", \"daily_food\", \"daily_sleep\",\"name\"],\r",
									"};\r",
									"   \r",
									"pm.test(\"Verify if the schema is valid\", function() {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"weight * 0.012\", function (){\r",
									" pm.expect(resp.daily_food).to.eql((req.weight)*0.012);\r",
									"});\r",
									"\r",
									"pm.test(\"qweight * 2.5\", function (){\r",
									" pm.expect(resp.daily_sleep).to.eql((req.weight)*2.5);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "age",
									"value": "{{age}}",
									"type": "text"
								},
								{
									"key": "weight",
									"value": "60",
									"type": "text"
								},
								{
									"key": "name",
									"value": "{{name}}",
									"type": "text"
								},
								{
									"key": "auth_token",
									"value": "{{token}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/test_pet_info",
							"host": [
								"{{url}}"
							],
							"path": [
								"test_pet_info"
							]
						}
					},
					"response": []
				},
				{
					"name": "get_test_user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var schema = {\r",
									"    \"type\" : \"object\",\r",
									"    \"properties\" : {\r",
									"        \"age\" : { \"type\" : \"string\"},\r",
									"        \"name\" : { \"type\" : \"string\"},\r",
									"        \"salary\" : { \"type\" : \"integer\"},\r",
									"        \"family\" : {\r",
									"            \"type\" : \"object\",\r",
									"    \"properties\" : {\r",
									"        \"u_salary_1_5_year\" : { \"type\" : \"integer\" },\r",
									"        \"children\" : {\r",
									"            \"type\" : \"array\",\r",
									"            \"items\" : [\r",
									"                {\r",
									"                    \"type\" : \"array\",\r",
									"                \"items\" : [ \r",
									"                    { \"type\" : \"string\"},\r",
									"                    { \"type\" : \"integer\"},\r",
									"                ]\r",
									"                },\r",
									"                {\r",
									"                 \"type\" : \"array\",\r",
									"                \"items\" : [ \r",
									"                    { \"type\" : \"string\"},\r",
									"                    { \"type\" : \"integer\"},\r",
									"                ]   \r",
									"                }\r",
									"            ]\r",
									"             \r",
									"        }\r",
									"    }\r",
									"        }\r",
									"\r",
									"    },\r",
									"    \"required\":[\"age\", \"family\", \"salary\",\"name\"],\r",
									"};\r",
									"pm.test(\"Verify if the schema is valid\", function() {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"var resp = pm.response.json();\r",
									"var req = request.data;\r",
									"\r",
									"var Name = pm.environment.get(\"name\");\r",
									"\r",
									"pm.test(\"name=name\", function (){\r",
									" pm.expect(req.name).to.eql(Name);\r",
									"});\r",
									"pm.test(\"age=age\", function (){\r",
									" pm.expect(resp.age).to.eql(req.age);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "age",
									"value": "{{age}}",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "{{u_salary_1.5_year}}",
									"type": "text"
								},
								{
									"key": "name",
									"value": "{{name}}",
									"type": "text"
								},
								{
									"key": "auth_token",
									"value": "{{token}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/get_test_user",
							"host": [
								"{{url}}"
							],
							"path": [
								"get_test_user"
							]
						}
					},
					"response": []
				},
				{
					"name": "currency",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var resp = pm.response.json();\r",
									"\r",
									"// 1 способ\r",
									"// const element = resp;\r",
									"// const randomElement = element[Math.floor(Math.random() * element.length)];\r",
									"// console.log(randomElement);\r",
									"// var Cur_ID = randomElement.Cur_ID;\r",
									"// console.log(Cur_ID);\r",
									"\r",
									"// pm.environment.set(\"Cur_ID\",Cur_ID);\r",
									"\r",
									"// отправялять запрос до тех пор, пока в окружении не попадет Cur_ID больше 371\r",
									"\r",
									"\r",
									"//2 способ\r",
									"for (var i  = 0; i < resp.length; i++) {\r",
									"  var q = resp[i];\r",
									"    console.log(q.Cur_ID);\r",
									"pm.environment.set(\"Cur_ID\",q.Cur_ID);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "auth_token",
									"value": "{{token}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/currency",
							"host": [
								"{{url}}"
							],
							"path": [
								"currency"
							]
						}
					},
					"response": []
				},
				{
					"name": "curr_byn",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var schema = {\r",
									"    \"type\" : \"object\",\r",
									"    \"properties\" : {\r",
									"        \"Cur_Abbreviation\" : { \"type\" : \"string\" },\r",
									"        \"Cur_ID\" : { \"type\" : \"integer\" },\r",
									"        \"Cur_Name\" : { \"type\" : \"string\" },\r",
									"        \"Cur_OfficialRate\" : { \"type\" : \"number\" },\r",
									"        \"Cur_Scale\" : { \"type\" : \"integer\" },\r",
									"        \"Date\" : { \"type\" : \"string\" },\r",
									"    },\r",
									"    \"required\":[\"Cur_Abbreviation\",  \"Cur_ID\",\"Cur_Name\", \"Cur_OfficialRate\", \"Cur_Scale\", \"Date\"],\r",
									"};\r",
									"pm.test(\"Verify if the schema is valid\", function() {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "auth_token",
									"value": "{{token}}",
									"type": "text"
								},
								{
									"key": "curr_code",
									"value": "{{Cur_ID}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/curr_byn",
							"host": [
								"{{url}}"
							],
							"path": [
								"curr_byn"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}